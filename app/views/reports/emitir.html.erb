<body class="relatorio-body">
  <div class="relatorio-container">
    <h1 class="titulo-principal">Relatório de Produtividade</h1>

    <section class="metas-section card">
      <h2 class="subtitulo">Metas</h2>
      <p>Total de Metas: <strong><%= @total_metas %></strong></p>
      <p>Metas Cumpridas: <strong><%= @metas_cumpridas %></strong> (<%= @porcentagem_metas_cumpridas %>%)</p>
    </section>

    <section class="tarefas-section card">
      <h2 class="subtitulo">Tarefas</h2>
      <p>Total de Tarefas: <strong><%= @total_tarefas %></strong></p>
      <p>Tarefas Executadas: <strong><%= @tarefas_executadas %></strong> (<%= @porcentagem_tarefas_executadas %>%)</p>
    </section>

    <section class="produtividade-grafico card">
      <h3>Produtividade por Semana</h3>
      <canvas id="produtividadeSemanal"></canvas>
    </section>

    <section class="produtividade-grafico card">
      <h3>Produtividade por Mês</h3>
      <canvas id="produtividadeMensal"></canvas>
    </section>

    <section class="produtividade-grafico card">
      <h3>Produtividade por Turno</h3>
      <canvas id="produtividadeTurnos"></canvas>
    </section>

    <section class="tarefas-categoria card">
      <h3>Categorias de Tarefas Mais Realizadas</h3>
      <% if @tarefas_por_categoria.any? %>
        <table class="tabela-relatorio">
          <thead>
            <tr>
              <th>Categoria</th>
              <th>Quantidade de Tarefas Concluídas</th>
            </tr>
          </thead>
          <tbody>
            <% @tarefas_por_categoria.each do |categoria_id, quantidade| %>
              <tr>
                <td><%= Categoria.find(categoria_id).nome %></td>
                <td><strong><%= quantidade %></strong></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% else %>
        <p>Nenhuma tarefa realizada por categoria até o momento.</p>
      <% end %>
    </section>

    <section class="metas-categoria card">
      <h3>Categorias de Metas Mais Realizadas</h3>
      <% if @metas_por_categoria.any? %>
      <table class="tabela-relatorio">
          <thead>
            <tr>
              <th>Categoria</th>
              <th>Quantidade de Metas Concluídas</th>
            </tr>
          </thead>
          <tbody>
            <% @metas_por_categoria.each do |categoria_id, quantidade| %>
              <tr>
                <td><%= Categoria.find(categoria_id).nome %></td>
                <td><strong><%= quantidade %></strong></td>
              </tr>
            <% end %>
          </tbody>
        </table>  
      <% else %>
        <p>Nenhuma meta realizada por categoria até o momento.</p>
      <% end %>
    </section>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Produtividade por Semana
    const tarefasSemanais = <%= @tarefas_por_semana.to_json.html_safe %>;
    const labelsSemana = Object.keys(tarefasSemanais);
    const dataSemanal = Object.values(tarefasSemanais);

    var ctxSemana = document.getElementById('produtividadeSemanal').getContext('2d');
    var produtividadeSemanalChart = new Chart(ctxSemana, {
      type: 'bar',
      data: {
        labels: labelsSemana,
        datasets: [{
          label: 'Tarefas Concluídas por Semana',
          data: dataSemanal,
          backgroundColor: 'rgba(54, 162, 235, 0.5)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { 
            beginAtZero: true 
          }
        }
      }
    });

    // Produtividade por Mês
    const metasMensais = <%= @metas_por_mes.to_json.html_safe %> || {};
    const labelsMes = Object.keys(metasMensais);
    const dataMensal = Object.values(metasMensais);

    var ctxMes = document.getElementById('produtividadeMensal').getContext('2d');
    var produtividadeMensalChart = new Chart(ctxMes, {
      type: 'line',
      data: {
        labels: labelsMes,
        datasets: [{
          label: 'Metas Cumpridas por Mês',
          data: dataMensal,
          fill: false,
          borderColor: 'rgba(75, 192, 192, 1)',
          tension: 0.1
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { 
            beginAtZero: true 
          }
        }
      }
    });

    // Produtividade por Turno
    const tarefasPorTurno = <%= @tarefas_por_turno.to_json.html_safe %>;
    
    // Map to define correct order of shifts
    const labelsTurnoMap = {
      'Madrugada': 0,
      'Manhã': 1,
      'Tarde': 2,
      'Noite': 3
    };

    // Sorting the turn data based on the predefined order
    const sortedTurnos = Object.keys(tarefasPorTurno).sort((a, b) => labelsTurnoMap[a] - labelsTurnoMap[b]);
    const dataTurno = sortedTurnos.map(turno => tarefasPorTurno[turno]);

    var ctxTurno = document.getElementById('produtividadeTurnos').getContext('2d');
    var produtividadeTurnosChart = new Chart(ctxTurno, {
      type: 'pie',
      data: {
        labels: sortedTurnos,
        datasets: [{
          label: 'Tarefas Concluídas por Turno',
          data: dataTurno,
          backgroundColor: [
            'rgba(255, 99, 132, 0.5)',
            'rgba(54, 162, 235, 0.5)',
            'rgba(75, 192, 192, 0.5)',
            'rgba(153, 102, 255, 0.5)'
          ],
          borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'top',
          },
          tooltip: {
            callbacks: {
              label: function(tooltipItem) {
                return tooltipItem.label + ': ' + tooltipItem.raw + ' tarefas';
              }
            }
          }
        }
      }
    });
  </script>
</body>
